--- charts-original/values.yaml
+++ charts/values.yaml
@@ -5,13 +5,8 @@
 replicaCount: 1
 
 image:
-  # -- Name of the image repository to pull the container image from.
-  repository: ghcr.io/kube-logging/logging-operator
-
-  # -- Image tag override for the default value (chart appVersion).
-  tag: ""
-
-  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
+  repository: rancher/mirrored-kube-logging-logging-operator
+  tag: 4.10.0
   pullPolicy: IfNotPresent
 
 env: []
@@ -53,7 +48,9 @@
 rbac:
   # -- Create rbac service account and roles.
   enabled: true
-
+  # -- Create ClusterRole that extend the existing edit ClusterRole to interact with logging-operator CRDs
+  ## Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#aggregated-clusterroles
+  createAggregatedEditClusterRole: false
   # specify service account manually
   # serviceAccountName: custom
 
@@ -70,17 +67,18 @@
 ## SecurityContext holds pod-level security attributes and common container settings.
 ## This defaults to non root user with uid 1000 and gid 2000.	*v1.PodSecurityContext	false
 ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
-podSecurityContext: {}
-#  runAsNonRoot: true
-#  runAsUser: 1000
-#  fsGroup: 2000
+podSecurityContext:
+  runAsNonRoot: true
+  runAsUser: 1000
+  fsGroup: 2000
 
 # -- Container SecurityContext for Logging operator. [More info](https://kubernetes.io/docs/concepts/policy/security-context/)
-securityContext: {}
-#  allowPrivilegeEscalation: false
-#  readOnlyRootFilesystem: true
-  # capabilities:
-  #   drop: ["ALL"]
+securityContext:
+  allowPrivilegeEscalation: false
+  readOnlyRootFilesystem: true
+  capabilities:
+     drop:
+       - ALL
 
 # -- Operator priorityClassName.
 priorityClassName: {}
@@ -102,6 +100,10 @@
   #   cpu: 100m
   #   memory: 128Mi
 
+# -- Operator Deployment and rke/rke2/k3s additionalResources dnsConfig
+dnsConfig: {}
+
+# -- Node NodeSelectors
 nodeSelector: {}
 
 # -- Node Tolerations
@@ -119,7 +121,7 @@
   # -- Logging resources are disabled by default
   enabled: false
 
-  # -- Reference to the logging system. Each of the loggingRefs can manage a fluentbit daemonset and a fluentd statefulset.
+  # -- Reference to the logging system. Each of the loggingRefs can manage a 1bit daemonset and a fluentd statefulset.
   loggingRef: ""
 
   # -- Disable configuration check before applying new fluentd configuration.
@@ -247,7 +249,7 @@
       imagePullSecrets: []
     pvc:
       # -- enable pvc for
-      enabled: true
+      enabled: false
       # -- storage class for event tailer pvc
       accessModes:
         - ReadWriteOnce
@@ -309,14 +311,164 @@
   image: fluent/fluent-bit
   pullPolicy: IfNotPresent
   port: 8080
-  args: ["-i", "http", "-p", "port=8080", "-o", "stdout"]
-  resources:
-    limits:
-      cpu: 100m
-      memory: 50Mi
-    requests:
-      cpu: 20m
-      memory: 25Mi
+  #   args: ["-i", "http", "-p", "port=8080", "-o", "stdout"]
+  # resources:
+  #   limits:
+  #     cpu: 100m
+  #     memory: 50Mi
+  #   requests:
+  #     cpu: 20m
+  #     memory: 25Mi
+
+  # Service definition for query http service
+  service:
+    type: ClusterIP
+    clusterIP: None
+    # Annotations to query http service
+    annotations: {}
+    # Labels to query http service
+    labels: {}
+
+# Logging CR specific serviceAccount annotations
+loggingServiceAccountAnnotations: {}
+## Syntax ##
+#  <logging-name>:
+#    <key>: <value>
+#
+## Example ##
+#
+#  root:
+#    eks.amazonaws.com/role-arn: <RoleARN>
+#
+## Result - added to the Logging resource ##
+#
+#  spec:
+#    fluentd:
+#      serviceAccount:
+#        metadata:
+#          annotations:
+#            eks.amazonaws.com/role-arn: arn:aws:iam::1234567890:role/my-iam-role
+#
+
+###################################
+# Rancher Logging Operator Values #
+###################################
+
+# Enable debug to use fluent-bit images that allow exec
+debug: false
+
+# Disable persistent volumes for buffers
+disablePvc: true
+
+# If your additional logging sources collect logs from systemd configure the systemd log path here
+systemdLogPath: "/run/log/journal"
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+    # Uncomment the below two lines to either enable or disable Windows logging. If this chart is
+    # installed via the Rancher UI, it will set this value to "true" if the cluster is a Windows
+    # cluster. In that scenario, if you would like to disable Windows logging on Windows clusters,
+    # set the value below to "false".
+    # windows:
+    #   enabled: true
+
+  # Change the "dockerRootDirectory" if the default Docker directory has changed.
+  dockerRootDirectory: ""
+
+  rkeWindowsPathPrefix: "c:\\"
+
+  seLinux:
+    enabled: false
+
+images:
+  config_reloader:
+    repository: rancher/mirrored-kube-logging-config-reloader
+    tag: v0.0.6
+  fluentbit:
+    repository: rancher/mirrored-fluent-fluent-bit
+    tag: 3.1.8
+  nodeagent_fluentbit:
+    os: "windows"
+    repository: rancher/fluent-bit
+    tag: 3.1.8
+  fluentbit_debug:
+    repository: rancher/mirrored-fluent-fluent-bit
+    tag: 3.1.8-debug
+  fluentd:
+    repository: rancher/mirrored-kube-logging-fluentd
+    tag: v1.16-4.10-full
+
+additionalLoggingSources:
+  rke:
+    enabled: false
+    fluentbit:
+      log_level: "info"
+      mem_buffer_limit: "5MB"
+  rke2:
+    enabled: false
+    stripUnderscores: false
+  k3s:
+    enabled: false
+    container_engine: "systemd"
+    stripUnderscores: false
+  aks:
+    enabled: false
+  eks:
+    enabled: false
+  gke:
+    enabled: false
+  kubeAudit:
+    auditFilename: ""
+    enabled: false
+    pathPrefix: ""
+    fluentbit:
+      logTag: kube-audit
+      tolerations: []
+
+# configures node agent options for windows node agents
+nodeAgents:
+  tls:
+    enabled: false
+
+# These settings apply to every Logging CR, including vendor Logging CRs enabled in "additionalLoggingSources".
+# Changing these affects every Logging CR installed.
+fluentd:
+  bufferStorageVolume: {}
+  livenessProbe:
+    tcpSocket:
+      port: 24240
+    initialDelaySeconds: 30
+    periodSeconds: 15
+  nodeSelector: {}
+  podPriorityClassName: ""
+  resources: {}
+  tolerations: {}
+  env: []
+  logLevel: {}
+  metrics:
+    # Ref: https://kube-logging.dev/docs/operation/logging-operator-monitoring/
+    serviceMonitor: false
+    prometheusRules: false
+fluentbit:
+  inputTail:
+    Buffer_Chunk_Size: ""
+    Buffer_Max_Size: ""
+    Mem_Buf_Limit: ""
+    Multiline_Flush: ""
+    Skip_Long_Lines: ""
+  podPriorityClassName: ""
+  resources: {}
+  tolerations: []
+  filterKubernetes:
+    Merge_Log: ""
+    Merge_Log_Key: ""
+    Merge_Log_Trim: ""
+    Merge_Parser: ""
+  metrics:
+    # Ref: https://kube-logging.dev/docs/operation/logging-operator-monitoring/
+    serviceMonitor: false
+    prometheusRules: false
 
 # -- Extra manifests to deploy as an array
 extraManifests: []
@@ -327,3 +479,12 @@
   #     name: extra-manifest
   #   data:
   #     extra-data: "value"
+
+# DO NOT SET THIS UNLESS YOU KNOW WHAT YOU ARE DOING.
+# Setting fields on this object can break rancher logging or cause unexpected behavior. It is intended to be used if you
+# need to configure functionality not exposed by rancher logging. It is highly recommended you check the `app-readme.md`
+# for the functionality you need before modifying this object.
+
+# this object will be merged with every logging CR created by this chart. Any fields that collide with fields from the
+# settings above will be overridden. Any fields that collide with fields set in the files in `templates/loggings` will
+# be ignored.
